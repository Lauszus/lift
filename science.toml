[science]
name = "science"
description = "Ship your interpreted executables using science."

# TODO(John Sirois): Enable "cross-builds". Currently the scie-jump does not allow specifying a
#  foreign platform scie-jump executable as the head of the scie, preventing this.
#platforms = [
#    "linux-aarch64",
#    "linux-x86_64",
#    "macos-aarch64",
#    "macos-x86_64",
#    "windows-x86_64",
#]

[[science.interpreters]]
id = "cpython"
# Providers can generate a lift manifest JSON file entry given a platform.
provider = "science.providers.PBS"
lazy = true

# Providers can define an optional configuration object (table) of arbitrary shape to be handed to
# them by the science infra.
[science.interpreters.configuration]
# Optional, defaults to the latest PBS release.
# release = "20221220"

# Can be exact, e.g.: 3.10.9; otherwise finds matching artifacts.
version = "3.10"

# Optional, defaults to the "install_only" flavor.
# flavor = "install_only"

[[science.files]]
name = "science.pex"

[[science.commands]]
# Sharp substitution always references an id and is the only substitution science performs. The
# rest of {...} flow through to the generated lift manifest JSON.
# The sharp substitution requires ids do not contain '{', '}' or ':'.
# A provider can define just 1 exported file, in which case #{provider-id} accesses it.
# A provider can define several exported files, in which case #{provider-id:file-id} accesses each.
# PBS proably will export `python`, and `pip`
exe = "#{cpython:python}"
args = [
    "{science.pex}",
]
env.remove_re = [
    "PEX_.*",
]
[science.commands.env.replace]
PEX_ROOT = "{scie.bindings}/pex_root"
PEX_PYTHON_PATH = "#{cpython:python}"
